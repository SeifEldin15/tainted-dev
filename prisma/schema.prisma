// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  email             String          @unique
  hashedPassword    String
  username          String          @unique
  image             String
  termsAccepted     Boolean         @default(false)
  oldResiCustomer   Boolean         @default(false)
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  isVerified        Boolean         @default(false)
  verifyOTP         String          @default("")
  resetOTP          String          @default("")
  resetPasswordCode String?         @default(uuid())
  role              Role            @default(USER)
  invoices          Invoices[]
  userPlans         UserPlans       @relation(fields: [userPlansId], references: [id])
  userPlansId       String          @db.ObjectId
  userIPv6Plans     IPv6Plans[]
  userIPv4Plans     IPv4Plans[]
  userCoreResiPlans CoreResiPlans[]
}

model UserPlans {
  id                   String  @id @default(auto()) @map("_id") @db.ObjectId
  // customer plan fields
  residential          Boolean @default(false)
  datacenter_shared    Boolean @default(false)
  datacenter_unmetered Boolean @default(false)
  ipv6                 Boolean @default(false)
  ipv4                 Boolean @default(false)
  mobile_proxies       Boolean @default(false)
  core_residential     Boolean @default(false)
  User                 User[]
}

model IPv6Plans {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  User        User?   @relation(fields: [userId], references: [id])
  userId      String? @db.ObjectId
  // fields
  planId      Int     @unique
  username    String
  password    String
  created_at  String
  expires_at  String
  email       String
  threadCount Int
  daysCount   Int
  price       Float
}

model IPv4Plans {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  User        User?   @relation(fields: [userId], references: [id])
  userId      String? @db.ObjectId
  // fields
  username    String
  created_at  String
  expires_at  String
  email       String
  threadCount Int
  daysCount   Int
}

model CoreResiPlans {
  id                  String  @id @default(auto()) @map("_id") @db.ObjectId
  User                User?   @relation(fields: [userId], references: [id])
  userId              String? @db.ObjectId
  // fields
  resellerId          String
  userResellerId      String  @unique
  configurationId     String
  username            String
  password            String
  created_at          String
  expires_at          String
  email               String
  subscription_status String?
  traffic_limit       Int?
  banwidth_left       Int?
  threadCount         Int?
  daysCount           Int?
}

model Invoices {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  User           User?           @relation(fields: [userId], references: [id])
  userId         String?         @db.ObjectId
  // invoice fields
  uniqid         String
  currency       String
  customer_email String
  status         String
  created_at     Int
  updated_at     Int
  planType       String
  planName       String
  planPrice      String
  status_history StatusHistory[]
  couponId       String?         @db.ObjectId
  coupon         Coupon?         @relation(fields: [couponId], references: [id])
}

model StatusHistory {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  Invoices       Invoices? @relation(fields: [invoicesId], references: [id])
  invoicesId     String    @db.ObjectId
  // status history fields
  invoice_number String
  status         String
  details        String
  created_at     Int
}

model Coupon {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  code      String     @unique
  percent   Float
  ipv4_resi Boolean    @default(false)
  ipv6_dc   Boolean    @default(false)
  ipv4_dc   Boolean    @default(false)
  invoice   Invoices[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
